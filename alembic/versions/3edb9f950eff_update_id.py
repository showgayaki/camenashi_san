'''update id

Revision ID: 3edb9f950eff
Revises: 47a7ccc37e55
Create Date: 2024-12-04 22:38:38.455560

'''
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3edb9f950eff'
down_revision: Union[str, None] = '47a7ccc37e55'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('category_id_unique', 'category', ['id'])
    # ### end Alembic commands ###

    # 次の行の処理するために、いったんPRIMARY KEYを削除
    op.execute('ALTER TABLE category DROP PRIMARY KEY')
    # AUTO_INCREMENTを削除してPRIMARY KEYを維持
    op.execute('ALTER TABLE category MODIFY id INT NOT NULL PRIMARY KEY')

    # UNIQUE制約があるので、既存レコードをいったん適当なものに変えておく
    op.execute('UPDATE category SET name = "あ", emoji = "a" WHERE id = 2')
    op.execute('UPDATE category SET name = "い", emoji = "b" WHERE id = 3')

    # データ挿入
    op.execute('INSERT INTO category VALUES (11,"しーしー","🚽"),(12,"うんち","💩")')

    # toiletテーブルのcategory_id を書き換え
    op.execute('UPDATE toilet SET category_id = 11 WHERE category_id = 2')
    op.execute('UPDATE toilet SET category_id = 12 WHERE category_id = 3')

    # レコードid:2を修正
    op.execute('UPDATE category SET name = "ノー集計", emoji = "👎" WHERE id = 2')
    # レコードid:3は削除
    op.execute('DELETE FROM category WHERE id = 3')


def downgrade() -> None:
    # 外部キー制約を無効にする
    op.execute('SET FOREIGN_KEY_CHECKS = 0')

    # categoryテーブル削除
    op.drop_table('category')
    # categoryテーブル作り直し
    category = op.create_table('category',
                               sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                               sa.Column('name', sa.String(length=20), nullable=False),
                               sa.Column('emoji', sa.String(length=20), nullable=False),
                               sa.PrimaryKeyConstraint('id'),
                               sa.UniqueConstraint('emoji'),
                               sa.UniqueConstraint('name')
                               )

    # 元のデータ挿入
    op.bulk_insert(category, [
        {'id': 1, 'name': 'ノーリアクション', 'emoji': ''},
        {'id': 2, 'name': 'おしーしー', 'emoji': '🚽'},
        {'id': 3, 'name': 'うんち', 'emoji': '💩'},
    ])

    # toiletテーブルのcategory_id を元に戻す
    op.execute('UPDATE toilet SET category_id = 2 WHERE category_id = 11')
    op.execute('UPDATE toilet SET category_id = 3 WHERE category_id = 12')

    # 外部キー制約を有効に戻す
    op.execute('SET FOREIGN_KEY_CHECKS = 1')
